'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _distLib = require('../../../dist/lib');

var _distLib2 = _interopRequireDefault(_distLib);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _tape = require('tape');

var _tape2 = _interopRequireDefault(_tape);

var _fixturesRestleSchemas = require('../fixtures/restle-schemas');

var _fixturesRestleSchemas2 = _interopRequireDefault(_fixturesRestleSchemas);

var _adapter = require('./adapter');

var _adapter2 = _interopRequireDefault(_adapter);

var _model = require('./model');

var _model2 = _interopRequireDefault(_model);

var _router = require('./router');

var _router2 = _interopRequireDefault(_router);

var app = new _distLib2['default']({ namespace: 'api', port: 1337 });

app.register({
  person: _fixturesRestleSchemas2['default'].person,
  animal: _fixturesRestleSchemas2['default'].animal,
  building: _fixturesRestleSchemas2['default'].building,
  habitat: _fixturesRestleSchemas2['default'].habitat,
  company: _fixturesRestleSchemas2['default'].company,
  country: _fixturesRestleSchemas2['default'].country
});

app.on('ready', function () {
  console.log('App is ready!');

  // adapter -> model -> router
  (0, _tape2['default'])('adapter tests', function (t) {
    var models = {
      person: app.model('person'),
      animal: app.model('animal'),
      building: app.model('building'),
      habitat: app.model('habitat'),
      company: app.model('company'),
      country: app.model('country')
    };

    (0, _adapter2['default'])(t, app, models).then(function (success) {
      t.ok(success, 'adapter tests were successful');
      t.end();
    });
  });

  (0, _tape2['default'])('model tests', function (t) {
    (0, _model2['default'])(t, app).then(function (success) {
      t.ok(success, 'model tests were successful');
      t.end();
    });
  });

  (0, _tape2['default'])('router tests', function (t) {
    (0, _router2['default'])(t, app).then(function (success) {
      t.ok(success, 'router tests were successful');
      t.end();
    });
  });

  (0, _tape2['default'])('teardown', function (t) {
    app.disconnect().then(function () {
      t.pass('app disconnected');
      t.end();
    });
  });
});